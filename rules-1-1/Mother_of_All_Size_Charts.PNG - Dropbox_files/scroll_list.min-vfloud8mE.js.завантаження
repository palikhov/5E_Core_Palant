define(["require","exports","tslib","react","react-dom","typescript/libraries/comments2/src/components/utils/animate_scroll"],(function(e,t,o,n,i,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ScrollList=void 0,n=o.__importStar(n),i=o.__importStar(i);var s=(function(e){function t(){var t=e.apply(this,arguments)||this;return t.listRef=null,t.setRef=function(e){t.listRef=e},t.scrollToElem=function(e){var o=i.findDOMNode(t);if(o){var n=o.getBoundingClientRect().top,s=e.getBoundingClientRect().top-n-16,l=o.scrollTop+s;return r.animateScroll({timing:r.Timing.QuadEaseOut,container:o,yPos:l,duration:600})}},t}return o.__extends(t,e),t.prototype.componentDidMount=function(){this.props.onScroll&&this.listRef.addEventListener("scroll",this.props.onScroll),this.props.onWindowResize&&window.addEventListener("resize",this.props.onWindowResize)},t.prototype.componentWillUnmount=function(){this.props.onScroll&&this.listRef.removeEventListener("scroll",this.props.onScroll),this.props.onWindowResize&&window.removeEventListener("resize",this.props.onWindowResize)},t.prototype.render=function(){var e=this,t=this.props,i=t.children,r=(t.onWindowResize,o.__rest(t,["children","onWindowResize"]));return n.createElement("ul",Object.assign({},r,{ref:this.setRef}),n.Children.map(i,(function(t){return n.cloneElement(t,{scrollToElem:e.scrollToElem})})))},t})(n.Component);t.ScrollList=s}));
//# sourceMappingURL=scroll_list.min.js-vflmY9sPc.map
define(["require","exports","api_v2/redux/comments2","typescript/component_libraries/files_components/src/blades/comments/data/actions"],(function(e,t,n,m){"use strict";var o;Object.defineProperty(t,"__esModule",{value:!0}),t.createCommentsBladeLoggingMiddleware=t.CommentsEventName=void 0,(o=t.CommentsEventName||(t.CommentsEventName={})).ADD_COMMENT="add_comment",o.DELETE_COMMENT="delete_comment",o.REPLY_COMMENT="reply_comment",o.EDIT_COMMENT="edit_comment",o.SUBSCRIBE_COMMENTS="subscribe_comments",o.UNSUBSCRIBE_COMMENTS="unsubscribe_comments",o.DISABLE_COMMENTS="disable_comments",o.ENABLE_COMMENTS="enable_comments",o.SHOW_RESOLVED_COMMENTS="show_resolved_comments",o.HIDE_RESOLVED_COMMENTS="hide_resolved_comments",t.createCommentsBladeLoggingMiddleware=function(e){return function(o){return function(o){return function(s){switch(s.type){case n.Action.AddCommentResult:var E=Boolean(s.payload.arg.thread_id);e({event:E?t.CommentsEventName.REPLY_COMMENT:t.CommentsEventName.ADD_COMMENT});break;case n.Action.DeleteCommentResult:e({event:t.CommentsEventName.DELETE_COMMENT});break;case n.Action.EditCommentResult:e({event:t.CommentsEventName.EDIT_COMMENT});break;case n.Action.UnsubscribeResult:e({event:t.CommentsEventName.UNSUBSCRIBE_COMMENTS});break;case n.Action.SubscribeResult:e({event:t.CommentsEventName.SUBSCRIBE_COMMENTS});break;case n.Action.DisableCommentingResult:e({event:t.CommentsEventName.DISABLE_COMMENTS});break;case n.Action.EnableCommentingResult:e({event:t.CommentsEventName.ENABLE_COMMENTS});break;case m.Action.UpdateShowResolvedComments:e({event:s.payload.showResolvedComments?t.CommentsEventName.SHOW_RESOLVED_COMMENTS:t.CommentsEventName.HIDE_RESOLVED_COMMENTS})}return o(s)}}}}}));
//# sourceMappingURL=logging_middleware.amd.min.js-vfl2mFa7Z.map
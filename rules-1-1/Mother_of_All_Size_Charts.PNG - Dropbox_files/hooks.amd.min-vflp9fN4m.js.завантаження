define(["require","exports","api_v2/redux/comments2","typescript/libraries/comments2/src/components/comment/index","typescript/component_libraries/files_components/src/blades/comments/component/context","react","react-redux","typescript/component_libraries/files_components/src/blades/comments/data/actions","typescript/component_libraries/files_components/src/blades/comments/data/selectors","typescript/component_libraries/files_components/src/blades/comments/component/comment_component_wrapper"],(function(e,t,s,n,o,i,c,r,m,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useResetThreads=t.useListComments=t.useCommentsComponent=void 0,t.useCommentsComponent=function(e){var t=e.fileId;switch(c.useSelector((function(e){return m.getAnnotationType(e,t)}))){case"audio":case"video":return n.TimeCodedComment;case"document":return n.NumberedComment;default:return a.BaseComment}},t.useListComments=function(e){var t=e.fileId,n=c.useDispatch();i.useEffect((function(){n(s.listCommentsAction({arg:{include_permissions:!0,stream:{identifier:{".tag":"file_path_or_id",file_path_or_id:t},type:{".tag":"file"}}}}))}),[t,n])},t.useResetThreads=function(e){var t=e.fileId,s=c.useDispatch(),n=o.useBasicCommentsBladeContext().commentBladeId;i.useEffect((function(){s(r.deactivateAllThreads({fileViewerId:n})),s(r.focusThread(n,null))}),[t,s,n])}}));
//# sourceMappingURL=hooks.amd.min.js-vflaqBkvw.map